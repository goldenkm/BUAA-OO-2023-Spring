# Generated by Django 4.2.5 on 2023-11-18 14:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='种类名称')),
                ('description', models.TextField(blank=True, default='', max_length=200, verbose_name='描述')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('edit_date', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '帖子分类',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_id', models.IntegerField(verbose_name='父级评论id')),
                ('like_count', models.IntegerField(verbose_name='点赞数')),
                ('create_time', models.DateTimeField(verbose_name='评论创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='文章标签')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('edit_date', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '帖子标签',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('university_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='院校代码')),
                ('name', models.CharField(max_length=10, verbose_name='学校名字')),
                ('location', models.CharField(max_length=16, verbose_name='所在地区')),
                ('mail', models.CharField(max_length=32, verbose_name='学校邮箱')),
                ('phone', models.IntegerField(verbose_name='电话')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('major', models.SmallIntegerField(choices=[(1, '材料科学与工程学院'), (2, '电子信息工程学院'), (3, '自动化科学与电气工程学院'), (4, '能源与动力工程学院'), (5, '航空科学与工程学院'), (6, '计算机学院'), (7, '机械工程及自动化学院'), (8, '经济管理学院'), (9, '数学科学学院'), (10, '生物与医学工程学院'), (11, '人文社会科学学院'), (12, '外国语学院'), (13, '交通科学与工程学院'), (14, '可靠性与系统工程学院'), (15, '宇航学院'), (16, '飞行学院'), (17, '仪器科学与光电工程学院'), (18, '北京学院'), (19, '物理学院'), (20, '法学院'), (21, '软件学院'), (23, '高等理工学院'), (24, '中法工程师学院/国际通用工程师学院'), (25, '国际学院'), (26, '新媒体艺术与设计学院'), (27, '化学学院'), (28, '马克思主义学院'), (29, '人文与社会科学高等研究院'), (30, '空间与环境学院'), (39, '网络空间安全学院'), (41, '继续教育学院'), (42, '人工智能研究院'), (44, '研究生院'), (48, '前沿科学技术创新研究院'), (49, '集成电路科学与工程学院')], verbose_name='本科专业')),
                ('introduction', models.CharField(blank=True, default='', max_length=100, verbose_name='简介')),
                ('age', models.IntegerField(default=0, verbose_name='年龄')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (0, '女')], default=1, verbose_name='性别')),
                ('image', models.ImageField(blank=True, default='/images/default.png', null=True, upload_to='media/images')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='学院名称')),
                ('university_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.university')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16, verbose_name='帖子标题')),
                ('content', models.TextField(max_length=5000, verbose_name='帖子正文')),
                ('create_time', models.DateTimeField(verbose_name='帖子创建时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user', verbose_name='帖子作者')),
                ('tags', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.tag')),
            ],
            options={
                'verbose_name': '帖子',
                'verbose_name_plural': '帖子',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='通知创建时间')),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.comment')),
                ('commenter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenter_id', to='app.user')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_id', to='app.user')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post')),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('major_id', models.SmallIntegerField(primary_key=True, serialize=False, verbose_name='专业代码')),
                ('major_name', models.CharField(max_length=16, verbose_name='专业名称')),
                ('university_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.university', verbose_name='所属大学')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_exam1', models.CharField(max_length=16, verbose_name='专业课1')),
                ('professional_exam2', models.CharField(max_length=16, verbose_name='专业课2')),
                ('english_exam', models.CharField(max_length=16, verbose_name='英语')),
                ('politic_exam', models.CharField(max_length=16, verbose_name='政治')),
                ('major_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.major')),
                ('university_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.university')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user', verbose_name='帖子作者'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post'),
        ),
        migrations.CreateModel(
            name='AdmitInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.IntegerField(verbose_name='总分')),
                ('score1', models.IntegerField(verbose_name='初试分数')),
                ('score2', models.IntegerField(verbose_name='复试分数')),
                ('rank', models.SmallIntegerField(verbose_name='排名')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('major_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.major')),
            ],
        ),
    ]
